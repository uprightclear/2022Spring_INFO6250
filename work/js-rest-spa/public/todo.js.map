{"version":3,"file":"todo.js","mappings":"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","sources":["webpack://js-rest-spa/./src/todo.js"],"sourcesContent":["\"use strict\";\n(function() {\n    let inventoryData = [];\n    const MESSAGES = {\n        networkError: 'Trouble connecting to the network.  Please try again',\n        default: 'Something went wrong.  Please try again',\n    };\n\n    const listEl = document.querySelector('#inventory-app .inventories');\n    const inputEl = document.querySelector('#inventory-app .to-add');\n    const buttonEl = document.querySelector('#inventory-app .add');\n    const status = document.querySelector('#inventory-app .status');\n\n    checkForSession();\n    addAbilityToLogin();\n    addAbilityToLogout();\n    disableButtonIfNoInput();\n    addAbilityToAddItems();\n    addAbilityToDeleteItems();\n    addAbilityToIncreaseInventory();\n    addAbilityToDecreaseInventory();\n\n    function disableButtonIfNoInput() {\n        inputEl.addEventListener('input', () => {\n            buttonEl.disabled = !inputEl.value;\n        });\n    }\n\n    function addAbilityToAddItems() {\n        buttonEl.addEventListener('click', (e) => {\n            fetch(`/inventory`, {\n                method: 'POST',\n                headers: new Headers({\n                    'content-type': 'application/json'\n                }),\n                body: JSON.stringify({\n                    name: inputEl.value,\n                })\n            })\n                .then( response => {\n                    if(response.ok) {\n                        return response.json();\n                    } else {\n                        return response.json().then(err => Promise.reject(err));\n                    }\n                })\n                .then( inventory => {\n                    inventoryData = inventory;\n                    inputEl.value = '';\n                    render(inventory);\n                    updateStatus('Opreration success.');\n                })\n                .catch(err => updateStatus(\"You have an error: \" + err.error));\n        });\n    }\n\n    function addAbilityToIncreaseInventory() {\n        listEl.addEventListener('click', (e) => {\n            if(!e.target.classList.contains('increase')) {\n                return;\n            }\n            const itemId = e.target.dataset.itemid;\n            fetch(`/inventory/increase/${itemId}`, {\n                method: 'POST'\n            })\n                .then( response => {\n                    if(response.ok) {\n                        return response.json();\n                    } else {\n                        return response.json().then(err => Promise.reject(err));\n                    }\n                })\n                .then( inventory => {\n                    inventoryData = inventory;\n                    render(inventoryData);\n                    updateStatus('Opreration success.');\n                })\n                .catch(err => updateStatus(\"You have an error: \" + err.error));\n        });\n    }\n\n    function addAbilityToDecreaseInventory() {\n\n        listEl.addEventListener('click', (e) => {\n            if(!e.target.classList.contains('decrease')) {\n                return;\n            }\n\n            const itemId = e.target.dataset.itemid;\n            const item = inventoryData[itemId];\n            const name = item.name;\n            const quantity = item.quantity - 1;\n            fetch(`/inventory/decrease/${itemId}`, {\n                method: 'POST',\n                headers: new Headers({\n                    'content-type': 'application/json'\n                }),\n                body: JSON.stringify({\n                    itemId: {\n                        itemId: itemId,\n                        name: name,\n                        quantity: quantity\n                    }\n                })\n            })\n                .then( response => {\n                    if(response.ok) {\n                        return response.json();\n                    } else {\n                        return response.json().then(err => Promise.reject(err));\n                    }\n                })\n                .then( inventory => {\n                    inventoryData = inventory;\n                    render(inventoryData);\n                    updateStatus('Opreration success.');\n                })\n                .catch(err => updateStatus(\"You have an error: \" + err.error));\n        });\n    }\n\n    function updateStatus( message ) {\n        status.innerText = message;\n    }\n    /////////////////////////////////\n    function setLoggedIn( isLoggedIn ) {\n        // Notice how more complicated this is because we're not basing this off of state data\n        // Not just here, but in the places we have to change our login status\n        const loginEl = document.querySelector('main');\n        if(isLoggedIn) {\n            loginEl.classList.remove('not-logged-in');\n            loginEl.classList.add('logged-in');\n        } else {\n            loginEl.classList.add('not-logged-in');\n            loginEl.classList.remove('logged-in');\n        }\n        render(inventoryData);\n        renderStatus('');\n    }\n\n    function renderOnLogin(todos) {\n        inventoryData = todos;\n        setLoggedIn(true);\n    }\n\n    function checkForSession() {\n        fetchSession()\n            .then( populateTodos )\n            .catch( () => setLoggedIn(false) );\n    }\n\n    function addAbilityToLogin() {\n        const buttonEl = document.querySelector('.login button');\n        const usernameEl = document.querySelector('.login__username');\n        buttonEl.addEventListener('click', (e) => {\n            const username = usernameEl.value;\n            fetchLogin(username)\n                .then( renderOnLogin )\n                .catch( error => renderStatus(error) );\n        });\n    }\n\n    function addAbilityToLogout() {\n        const buttonEl = document.querySelector('.logout');\n        buttonEl.addEventListener('click', (e) => {\n            inventoryData = [];\n            fetchLogout()\n                .then( () => setLoggedIn(false) )\n                .catch( error => renderStatus(error) );\n        });\n    }\n\n    function populateTodos() {\n        fetchTodos()\n            .then( rawTodos => {\n                inventoryData = rawTodos;\n                setLoggedIn(true);\n                render(inventoryData);\n                renderStatus('');\n            })\n            .catch( error => {\n                console.log(!error);\n                renderStatus(error);\n            });\n    }\n\n\n    function addAbilityToDeleteItems() {\n        listEl.addEventListener('click', (e) => {\n            if(!e.target.classList.contains('delete')) {\n                return;\n            }\n\n            const itemId = e.target.dataset.itemid;\n            fetch(`/inventory/${itemId}`, {\n                method: 'DELETE'\n            })\n                .then( response => {\n                    if(response.ok) {\n                        return response.json();\n                    } else {\n                        return response.json().then(err => Promise.reject(err));\n                    }\n                })\n                .then( inventory => {\n                    inventoryData = inventory;\n                    render(inventoryData);\n                    updateStatus('Opreration success.');\n                })\n                .catch(err => updateStatus(\"You have an error: \" + err.error));\n        });\n    }\n\n    function fetchTodos() {\n        return fetch('/api/todos')\n            .catch( () => Promise.reject({ error: 'networkError' }) )\n            .then( response => {\n                if (response.ok) {\n                    return response.json();\n                }\n                return response.json()\n                    .catch( error => Promise.reject({ error }) )\n                    .then( err => Promise.reject(err) );\n            });\n    }\n\n    function fetchSession() {\n        return fetch('/api/session', {\n            method: 'GET',\n        })\n            .catch( () => Promise.reject({ error: 'networkError' }) )\n            .then( response => {\n                if (response.ok) {\n                    return response.json();\n                }\n                return response.json()\n                    .catch( error => Promise.reject({ error }) )\n                    .then( err => Promise.reject(err) );\n            });\n    }\n\n    function fetchLogout() {\n        return fetch('/api/session', {\n            method: 'DELETE',\n        })\n            .catch( () => Promise.reject({ error: 'networkError' }) )\n            .then( response => {\n                if (response.ok) {\n                    return response.json();\n                }\n                return response.json()\n                    .catch( error => Promise.reject({ error }) )\n                    .then( err => Promise.reject(err) );\n            });\n    }\n\n    function fetchLogin(username) {\n        return fetch('/api/session', {\n            method: 'POST',\n            headers: new Headers({\n                'content-type': 'application/json'\n            }),\n            body: JSON.stringify({ username }),\n        })\n            .catch( () => Promise.reject({ error: 'networkError' }) )\n            .then( response => {\n                if (response.ok) {\n                    return response.json();\n                }\n                return response.json()\n                    .catch( error => Promise.reject({ error }) )\n                    .then( err => Promise.reject(err) );\n            });\n    }\n\n    function render( inventory ) {\n        const html = Object.values(inventory).map( (item, index) => {\n            return `\n        <li class=\"inventory ${item.quantity === 0 ? \"out-of-stock\" : \"\"}\">\n            <div class=\"inventory-container\">\n                <span class=\"inventory-name\" data-itemId=\"${item.itemId}\">${item.name}</span>\n                <div class=\"inventory-quantity\">\n                    <button class=\"decrease\" data-itemId=\"${item.itemId}\" ${item.quantity === 0 ? \"disabled\" : \"\"}>-</button>\n                    <span class=\"quantity-value\" data-itemId=\"${item.itemId}\">${item.quantity}</span>\n                    <button class=\"increase\" data-itemId=\"${item.itemId}\">+</button>\n                </div>\n                <button class=\"delete\" data-itemId=\"${item.itemId}\">X Delete</button>\n            </div>\n        </li>\n      `;\n\n        }).join('');\n        listEl.innerHTML = html;\n        buttonEl.disabled = !inputEl.value;\n    }\n\n    function renderStatus(message) {\n        const statusEl = document.querySelector('.status');\n        if( !message ) {\n            statusEl.innerText = '';\n            return;\n        }\n        const key = message?.error ? message.error : 'default';\n        statusEl.innerText = MESSAGES[key] || MESSAGES.default;\n    }\n\n})();\n"],"names":["inventoryData","MESSAGES","networkError","listEl","document","querySelector","inputEl","buttonEl","status","checkForSession","addAbilityToLogin","addAbilityToLogout","disableButtonIfNoInput","addAbilityToAddItems","addAbilityToDeleteItems","addAbilityToIncreaseInventory","addAbilityToDecreaseInventory","addEventListener","disabled","value","e","fetch","method","headers","Headers","body","JSON","stringify","name","then","response","ok","json","err","Promise","reject","inventory","render","updateStatus","error","target","classList","contains","itemId","dataset","itemid","item","quantity","message","innerText","setLoggedIn","isLoggedIn","loginEl","remove","add","renderStatus","renderOnLogin","todos","fetchSession","populateTodos","usernameEl","username","fetchLogin","fetchLogout","fetchTodos","rawTodos","console","log","html","Object","values","map","index","join","innerHTML","statusEl","key"],"sourceRoot":""}